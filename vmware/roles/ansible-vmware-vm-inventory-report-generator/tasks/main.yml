
---
# - name: VMware VM Inventory Generator
#   hosts: localhost
#   connection: local
#   gather_facts: no
#   # vars:
#   #   export_type: html # choices['html', 'csv']
#   tasks:
- name: Gather fact for all vm
  vmware_datacenter_info:
    hostname: "{ vcenter_hostname }"
    username: "{ vcenter_username }"
    password: "{ vcenter_password }"
    validate_certs: no
  register: vms

  # - name: Gather facts for vm summary
  #   vmware_guest_facts:
  #     hostname: "{{ vcenter_hostname }}"
  #     username: "{{ vcenter_username }}"
  #     password: "{{ password }}"
  #     validate_certs: no
  #     datacenter: DC
  #     name: "{{ item.guest_name }}"
  #   register: gather_facts_for_vm_summary_result
  #   loop: "{{ vms.virtual_machines }}"
  #   loop_control:
  #     label: "{{ item.guest_name }}"

  # - name: Gather facts for vm each properties
  #   vmware_guest_facts:
  #     hostname: "{{ vcenter_hostname }}"
  #     username: "{{ vcenter_username }}"
  #     password: "{{ password }}"
  #     validate_certs: no
  #     datacenter: DC
  #     name: "{{ item.guest_name }}"
  #     schema: vsphere
  #     properties:
  #       - alarmActionsEnabled
  #       - overallStatus
  #       - config.name
  #       - config.annotation
  #       - config.flags
  #       - config.managedBy
  #       - guest.hostName
  #       - guest.net
  #       - summary.storage
  #       - summary.quickStats
  #       - summary.config
  #       - summary.runtime
  #       - config.memoryAllocation
  #   register: gather_facts_for_vm_each_properties
  #   loop: "{{ vms.virtual_machines }}"
  #   loop_control:
  #     label: "{{ item.guest_name }}"

  # - name: Set of combine data
  #   set_fact:
  #     data: >-
  #       {{ data | default([])
  #         + [item.instance | combine(combine_data.instance)]
  #       }}
  #   vars:
  #     combine_data: >-
  #       {{ gather_facts_for_vm_each_properties.results
  #         | selectattr('instance.config.name','equalto',item['instance']['hw_name'])
  #         | list
  #         | first
  #       }}
  #   loop: "{{ gather_facts_for_vm_summary_result.results }}"
  #   loop_control:
  #     label: "{{ item.instance.hw_name }}"

  # - name: Generate VM inventory report(html)
  #   template:
  #     src: templates/vmware_vm_inventory_report.j2
  #     dest: vmware_vm_inventory_report.html
  #   when: export_type == "html"

  # - name: Generate VM inventory report(csv)
  #   template:
  #     src: templates/vmware_vm_inventory_report_csv.j2
  #     dest: vmware_vm_inventory_report.csv
  #   when: export_type == "csv"